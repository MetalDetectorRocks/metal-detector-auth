[versions]
kotest = "5.9.1"
kotestExtensionSpring = "1.3.0"
kotlin = "2.1.20"
lokiLogbackAppender = "1.6.0"
mockk = "1.14.0"
postgresql = "42.7.5"

[libraries]
flyway = { module = "org.flywaydb:flyway-core" }
flywayPostgres = { module = "org.flywaydb:flyway-database-postgresql" }
h2 = { module = "com.h2database:h2" }
kotestExtensionSpring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotestExtensionSpring" }
kotestFrameworkEngineJvm = { module = "io.kotest:kotest-framework-engine-jvm", version.ref = "kotest" }
kotestPropertyJvm = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }
kotestRunnerJunit5Jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
lokiLogbackAppender = { module = "com.github.loki4j:loki-logback-appender", version.ref = "lokiLogbackAppender" }
micrometerRegistryPrometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
springBootConfigurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
springBootDevTools = { module = "org.springframework.boot:spring-boot-devtools" }
springBootStarterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
springBootStarterAuthorizationServer = { module = "org.springframework.boot:spring-boot-starter-oauth2-authorization-server" }
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }

[bundles]
database = ["flyway", "flywayPostgres", "postgres"]
kotest = ["kotestFrameworkEngineJvm", "kotestPropertyJvm", "kotestRunnerJunit5Jvm", "kotestExtensionSpring"]
springBootStarter = ["springBootStarterActuator", "springBootStarterDataJpa", "springBootStarterSecurity", "springBootStarterWeb", "springBootStarterAuthorizationServer"]

[plugins]
dockerPublish = { id = "de.europace.docker-publish", version = "2.0.14" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinAllopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
springBoot = { id = "org.springframework.boot", version = "3.4.4" }
springDependencyManagement = { id = "io.spring.dependency-management", version = "1.1.7" }
